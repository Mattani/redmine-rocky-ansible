- name: Fail if db_passwd_redmine is not changed from default
  fail:
    msg: >
      The variable db_passwd_redmine is still set to the default value "Must_be_changed!".
      Please change it in group_vars before running this playbook.
  when: db_passwd_redmine == "Must_be_changed!"
  
  - name: SELinuxの状態確認
  command:
    /usr/sbin/selinuxenabled
  register:
    result
  changed_when: false
  failed_when: result.rc not in [0, 1]

- name: 起動時にSELinux無効化 (/etc/sysconfig/selinux)
  become: yes
  selinux: state=disabled
  when: result.rc == 0

- name: SELinux無効化 (setenforce)
  become: yes
  command: setenforce 0
  when: result.rc == 0

- name: Check if firewalld is installed and running
  shell: firewall-cmd --state
  register: firewall_state
  ignore_errors: yes
  changed_when: false

- name: Skip message if firewalld is not running
  debug:
    msg: "firewalld is not running. Skipping firewall-related tasks."
  when: firewall_state.rc != 0

- name: Ensure firewalld is started and enabled
  systemd:
    name: firewalld
    state: started
    enabled: yes
  when: firewall_state.rc == 0

- name: Get default network interface
  command: ip route show default
  register: default_route
  changed_when: false
  when: firewall_state.rc == 0

- name: Get default network interface via `ip route`
  command: ip route show default
  register: ip_route_output
  when: firewall_state.rc == 0

- name: Debug ip_route_output
  debug:
    var: ip_route_output.stdout
  when: firewall_state.rc == 0

- name: Extract default interface name from ip route
  set_fact:
    default_interface: "{{ (ip_route_output.stdout | regex_findall('dev\\s+(\\S+)'))[0] | default('NOT FOUND', true) }}"
  when: firewall_state.rc == 0

- name: Get active connections
  command: nmcli -t -f NAME,DEVICE connection show --active
  register: active_connections
  changed_when: false
  when: firewall_state.rc == 0

- name: Get connection name bound to the interface
  set_fact:
    connection_name: >-
      {{
        (active_connections.stdout_lines | select("search", default_interface + "$") | list)
        | map('regex_replace', ':' + default_interface + '$', '')
        | first | default('NOT FOUND')
      }}
  when: firewall_state.rc == 0

- name: Debug default_interface
  debug:
    var: default_interface
  when: firewall_state.rc == 0

- name: Debug active_connections
  debug:
    var: active_connections.stdout_lines
  when: firewall_state.rc == 0

- name: Debug connection_name
  debug:
    msg: "Connection name: {{ connection_name }}"
  when: firewall_state.rc == 0

- name: Set firewalld zone to public for the connection
  command: >
    nmcli connection modify "{{ connection_name }}" connection.zone public
  when: connection_name is defined

- name: Restart the connection to apply zone change
  shell: >
    nmcli connection down "{{ connection_name }}" && nmcli connection up "{{ connection_name }}"
  when: connection_name is defined
  
- name: Allow HTTP through firewalld
  ansible.posix.firewalld:
    zone: public
    service: http
    permanent: yes
    state: enabled
    immediate: yes
  when: firewall_state.rc == 0

- name: 開発ツールとC/C++コンパイラをインストール
  become: yes
  dnf:
    name:
      - "@development tools"
      - gcc
      - gcc-c++
    state: present

- name: RubyとPassengerのビルドに必要な開発ツールやヘッダファイルのインストール
  become: yes
  yum:
    name='openssl-devel,readline-devel,zlib-devel,curl-devel,libyaml,libffi-devel'

- name: Enable postgresql:16 module
  command: dnf -y module enable postgresql:16

- name:  PostgreSQLとヘッダファイルのインストール
  become: yes
  yum:
    name='postgresql-server,postgresql-devel,python3-psycopg2'

- name: Apacheとヘッダファイルのインストール
  become: yes
  yum:
    name='httpd,httpd-devel'

- name: Enable powertools repository
  dnf:
    name: "@Development"
    state: present
    enablerepo: powertools

- name: Enable PowerTools repository via dnf config-manager
  command: dnf config-manager --set-enabled powertools
  become: yes

- name: ImageMagickとヘッダファイル・日本語フォントのインストール
  become: yes
  dnf:
    name:
      - ImageMagick
      - ImageMagick-devel
      - google-noto-sans-cjk-ttc-fonts
    state: present

- name: Install required packages (clang, llvm)
  become: true
  dnf:
    name:
      - clang
      - clang-devel
      - llvm-devel
    state: present
    
- name: Install Rust using rustup (non-interactive)
  shell: curl https://sh.rustup.rs -sSf | sh -s -- -y
  args:
    creates: "{{ ansible_env.HOME }}/.cargo/bin/rustc"

- name: Source cargo environment for future tasks (only applies to this session)
  shell: echo 'source $HOME/.cargo/env' >> ~/.bashrc
  args:
    executable: /bin/bash

- name: そのほかのツールのインストール
  become: yes
  dnf:
    name:
      - subversion
      - git
      - which
    state: present

- name: 作業ディレクトリ作成
  file: path={{ work_dir }}
    state=directory
    mode=0755

- name: Check current swap status
  shell: "free -m | grep Swap | awk '{print $2}'"
  register: swap_status
  changed_when: false

- name: Debug swap status
  debug:
    msg: "Current swap size: {{ swap_status.stdout.strip() }}"

- name: Create a swap file if no swap is available
  shell: |
    dd if=/dev/zero of=/swapfile bs=1M count=2048
    chmod 600 /swapfile
    mkswap /swapfile
  when: swap_status.stdout|int == 0

- name: Enable the swap file
  command: swapon /swapfile
  when: swap_status.stdout|int == 0

- name: Add swap entry to fstab
  lineinfile:
    path: /etc/fstab
    line: '/swapfile swap swap defaults 0 0'
    create: yes
  when: swap_status.stdout|int == 0
